#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace delivery.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DeliveryWeb")]
	public partial class DbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMovement(Movement instance);
    partial void UpdateMovement(Movement instance);
    partial void DeleteMovement(Movement instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertDelegate(Delegate instance);
    partial void UpdateDelegate(Delegate instance);
    partial void DeleteDelegate(Delegate instance);
    partial void InsertCode(Code instance);
    partial void UpdateCode(Code instance);
    partial void DeleteCode(Code instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertCustomerOrder(CustomerOrder instance);
    partial void UpdateCustomerOrder(CustomerOrder instance);
    partial void DeleteCustomerOrder(CustomerOrder instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    #endregion
		
		public DbDataContext() : 
				base(global::delivery.Properties.Settings.Default.DeliveryWebConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Movement> Movements
		{
			get
			{
				return this.GetTable<Movement>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Delegate> Delegates
		{
			get
			{
				return this.GetTable<Delegate>();
			}
		}
		
		public System.Data.Linq.Table<Code> Codes
		{
			get
			{
				return this.GetTable<Code>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOrder> CustomerOrders
		{
			get
			{
				return this.GetTable<CustomerOrder>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movements")]
	public partial class Movement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Movement;
		
		private string _Name;
		
		private System.Nullable<bool> _Exist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MovementChanging(int value);
    partial void OnID_MovementChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExistChanging(System.Nullable<bool> value);
    partial void OnExistChanged();
    #endregion
		
		public Movement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Movement", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Movement
		{
			get
			{
				return this._ID_Movement;
			}
			set
			{
				if ((this._ID_Movement != value))
				{
					this.OnID_MovementChanging(value);
					this.SendPropertyChanging();
					this._ID_Movement = value;
					this.SendPropertyChanged("ID_Movement");
					this.OnID_MovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit")]
		public System.Nullable<bool> Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_User;
		
		private string _Name;
		
		private string _pass;
		
		private System.Nullable<bool> _OrderPrm;
		
		private System.Nullable<bool> _MovementPrm;
		
		private System.Nullable<bool> _CitieAndProvincePrm;
		
		private System.Nullable<bool> _DelegatePrm;
		
		private System.Nullable<bool> _CustomerPrm;
		
		private System.Nullable<bool> _AddMovementNewPrm;
		
		private System.Nullable<bool> _BtnDelete;
		
		private System.Nullable<bool> _UsersPrm;
		
		private System.Nullable<bool> _SittingsPrm;
		
		private System.Nullable<bool> _Exist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UserChanging(int value);
    partial void OnID_UserChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnOrderPrmChanging(System.Nullable<bool> value);
    partial void OnOrderPrmChanged();
    partial void OnMovementPrmChanging(System.Nullable<bool> value);
    partial void OnMovementPrmChanged();
    partial void OnCitieAndProvincePrmChanging(System.Nullable<bool> value);
    partial void OnCitieAndProvincePrmChanged();
    partial void OnDelegatePrmChanging(System.Nullable<bool> value);
    partial void OnDelegatePrmChanged();
    partial void OnCustomerPrmChanging(System.Nullable<bool> value);
    partial void OnCustomerPrmChanged();
    partial void OnAddMovementNewPrmChanging(System.Nullable<bool> value);
    partial void OnAddMovementNewPrmChanged();
    partial void OnBtnDeleteChanging(System.Nullable<bool> value);
    partial void OnBtnDeleteChanged();
    partial void OnUsersPrmChanging(System.Nullable<bool> value);
    partial void OnUsersPrmChanged();
    partial void OnSittingsPrmChanging(System.Nullable<bool> value);
    partial void OnSittingsPrmChanged();
    partial void OnExistChanging(System.Nullable<bool> value);
    partial void OnExistChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(50)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPrm", DbType="Bit")]
		public System.Nullable<bool> OrderPrm
		{
			get
			{
				return this._OrderPrm;
			}
			set
			{
				if ((this._OrderPrm != value))
				{
					this.OnOrderPrmChanging(value);
					this.SendPropertyChanging();
					this._OrderPrm = value;
					this.SendPropertyChanged("OrderPrm");
					this.OnOrderPrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovementPrm", DbType="Bit")]
		public System.Nullable<bool> MovementPrm
		{
			get
			{
				return this._MovementPrm;
			}
			set
			{
				if ((this._MovementPrm != value))
				{
					this.OnMovementPrmChanging(value);
					this.SendPropertyChanging();
					this._MovementPrm = value;
					this.SendPropertyChanged("MovementPrm");
					this.OnMovementPrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitieAndProvincePrm", DbType="Bit")]
		public System.Nullable<bool> CitieAndProvincePrm
		{
			get
			{
				return this._CitieAndProvincePrm;
			}
			set
			{
				if ((this._CitieAndProvincePrm != value))
				{
					this.OnCitieAndProvincePrmChanging(value);
					this.SendPropertyChanging();
					this._CitieAndProvincePrm = value;
					this.SendPropertyChanged("CitieAndProvincePrm");
					this.OnCitieAndProvincePrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegatePrm", DbType="Bit")]
		public System.Nullable<bool> DelegatePrm
		{
			get
			{
				return this._DelegatePrm;
			}
			set
			{
				if ((this._DelegatePrm != value))
				{
					this.OnDelegatePrmChanging(value);
					this.SendPropertyChanging();
					this._DelegatePrm = value;
					this.SendPropertyChanged("DelegatePrm");
					this.OnDelegatePrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPrm", DbType="Bit")]
		public System.Nullable<bool> CustomerPrm
		{
			get
			{
				return this._CustomerPrm;
			}
			set
			{
				if ((this._CustomerPrm != value))
				{
					this.OnCustomerPrmChanging(value);
					this.SendPropertyChanging();
					this._CustomerPrm = value;
					this.SendPropertyChanged("CustomerPrm");
					this.OnCustomerPrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddMovementNewPrm", DbType="Bit")]
		public System.Nullable<bool> AddMovementNewPrm
		{
			get
			{
				return this._AddMovementNewPrm;
			}
			set
			{
				if ((this._AddMovementNewPrm != value))
				{
					this.OnAddMovementNewPrmChanging(value);
					this.SendPropertyChanging();
					this._AddMovementNewPrm = value;
					this.SendPropertyChanged("AddMovementNewPrm");
					this.OnAddMovementNewPrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BtnDelete", DbType="Bit")]
		public System.Nullable<bool> BtnDelete
		{
			get
			{
				return this._BtnDelete;
			}
			set
			{
				if ((this._BtnDelete != value))
				{
					this.OnBtnDeleteChanging(value);
					this.SendPropertyChanging();
					this._BtnDelete = value;
					this.SendPropertyChanged("BtnDelete");
					this.OnBtnDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersPrm", DbType="Bit")]
		public System.Nullable<bool> UsersPrm
		{
			get
			{
				return this._UsersPrm;
			}
			set
			{
				if ((this._UsersPrm != value))
				{
					this.OnUsersPrmChanging(value);
					this.SendPropertyChanging();
					this._UsersPrm = value;
					this.SendPropertyChanged("UsersPrm");
					this.OnUsersPrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SittingsPrm", DbType="Bit")]
		public System.Nullable<bool> SittingsPrm
		{
			get
			{
				return this._SittingsPrm;
			}
			set
			{
				if ((this._SittingsPrm != value))
				{
					this.OnSittingsPrmChanging(value);
					this.SendPropertyChanging();
					this._SittingsPrm = value;
					this.SendPropertyChanged("SittingsPrm");
					this.OnSittingsPrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit")]
		public System.Nullable<bool> Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delegates")]
	public partial class Delegate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Delegate;
		
		private string _Name;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private System.Nullable<decimal> _Salary;
		
		private string _Note;
		
		private System.Nullable<bool> _Exist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DelegateChanging(int value);
    partial void OnID_DelegateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnSalaryChanging(System.Nullable<decimal> value);
    partial void OnSalaryChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnExistChanging(System.Nullable<bool> value);
    partial void OnExistChanged();
    #endregion
		
		public Delegate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Delegate", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Delegate
		{
			get
			{
				return this._ID_Delegate;
			}
			set
			{
				if ((this._ID_Delegate != value))
				{
					this.OnID_DelegateChanging(value);
					this.SendPropertyChanging();
					this._ID_Delegate = value;
					this.SendPropertyChanged("ID_Delegate");
					this.OnID_DelegateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(50)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(50)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(20,2)")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit")]
		public System.Nullable<bool> Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Codes")]
	public partial class Code : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Code;
		
		private string _Barcode;
		
		private string _CustomerCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CodeChanging(int value);
    partial void OnID_CodeChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    #endregion
		
		public Code()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Code
		{
			get
			{
				return this._ID_Code;
			}
			set
			{
				if ((this._ID_Code != value))
				{
					this.OnID_CodeChanging(value);
					this.SendPropertyChanging();
					this._ID_Code = value;
					this.SendPropertyChanged("ID_Code");
					this.OnID_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(50)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="VarChar(50)")]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _UserName;
		
		private string _NormalizedUserName;
		
		private string _Email;
		
		private string _NormalizedEmail;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _ConcurrencyStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTimeOffset> _LockoutEnd;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _Address;
		
		private string _Code;
		
		private System.Nullable<bool> _Exist;
		
		private string _Name;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Discriminator;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNormalizedUserNameChanging(string value);
    partial void OnNormalizedUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNormalizedEmailChanging(string value);
    partial void OnNormalizedEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnConcurrencyStampChanging(string value);
    partial void OnConcurrencyStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnLockoutEndChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnExistChanging(System.Nullable<bool> value);
    partial void OnExistChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public AspNetUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedUserName", DbType="NVarChar(256)")]
		public string NormalizedUserName
		{
			get
			{
				return this._NormalizedUserName;
			}
			set
			{
				if ((this._NormalizedUserName != value))
				{
					this.OnNormalizedUserNameChanging(value);
					this.SendPropertyChanging();
					this._NormalizedUserName = value;
					this.SendPropertyChanged("NormalizedUserName");
					this.OnNormalizedUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalizedEmail", DbType="NVarChar(256)")]
		public string NormalizedEmail
		{
			get
			{
				return this._NormalizedEmail;
			}
			set
			{
				if ((this._NormalizedEmail != value))
				{
					this.OnNormalizedEmailChanging(value);
					this.SendPropertyChanging();
					this._NormalizedEmail = value;
					this.SendPropertyChanged("NormalizedEmail");
					this.OnNormalizedEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcurrencyStamp", DbType="NVarChar(MAX)")]
		public string ConcurrencyStamp
		{
			get
			{
				return this._ConcurrencyStamp;
			}
			set
			{
				if ((this._ConcurrencyStamp != value))
				{
					this.OnConcurrencyStampChanging(value);
					this.SendPropertyChanging();
					this._ConcurrencyStamp = value;
					this.SendPropertyChanged("ConcurrencyStamp");
					this.OnConcurrencyStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnd", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> LockoutEnd
		{
			get
			{
				return this._LockoutEnd;
			}
			set
			{
				if ((this._LockoutEnd != value))
				{
					this.OnLockoutEndChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnd = value;
					this.SendPropertyChanged("LockoutEnd");
					this.OnLockoutEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit")]
		public System.Nullable<bool> Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(MAX)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(MAX)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(MAX)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provinces")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Province;
		
		private string _ProvinceName;
		
		private bool _Exist;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProvinceChanging(int value);
    partial void OnID_ProvinceChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnExistChanging(bool value);
    partial void OnExistChanged();
    #endregion
		
		public Province()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Province", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Province
		{
			get
			{
				return this._ID_Province;
			}
			set
			{
				if ((this._ID_Province != value))
				{
					this.OnID_ProvinceChanging(value);
					this.SendPropertyChanging();
					this._ID_Province = value;
					this.SendPropertyChanged("ID_Province");
					this.OnID_ProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._ProvinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit NOT NULL")]
		public bool Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Cities", ThisKey="ID_Province", OtherKey="ID_Province")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOrders")]
	public partial class CustomerOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SubOrder;
		
		private string _CustomerCode;
		
		private string _Recipient;
		
		private string _RecipientPhone1;
		
		private string _RecipientPhone2;
		
		private string _Address;
		
		private int _ID_City;
		
		private float _PackagePrice;
		
		private float _PackageNumber;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SubOrderChanging(int value);
    partial void OnID_SubOrderChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnRecipientPhone1Changing(string value);
    partial void OnRecipientPhone1Changed();
    partial void OnRecipientPhone2Changing(string value);
    partial void OnRecipientPhone2Changed();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnID_CityChanging(int value);
    partial void OnID_CityChanged();
    partial void OnPackagePriceChanging(float value);
    partial void OnPackagePriceChanged();
    partial void OnPackageNumberChanging(float value);
    partial void OnPackageNumberChanged();
    #endregion
		
		public CustomerOrder()
		{
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SubOrder", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SubOrder
		{
			get
			{
				return this._ID_SubOrder;
			}
			set
			{
				if ((this._ID_SubOrder != value))
				{
					this.OnID_SubOrderChanging(value);
					this.SendPropertyChanging();
					this._ID_SubOrder = value;
					this.SendPropertyChanged("ID_SubOrder");
					this.OnID_SubOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(MAX)")]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientPhone1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RecipientPhone1
		{
			get
			{
				return this._RecipientPhone1;
			}
			set
			{
				if ((this._RecipientPhone1 != value))
				{
					this.OnRecipientPhone1Changing(value);
					this.SendPropertyChanging();
					this._RecipientPhone1 = value;
					this.SendPropertyChanged("RecipientPhone1");
					this.OnRecipientPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientPhone2", DbType="NVarChar(MAX)")]
		public string RecipientPhone2
		{
			get
			{
				return this._RecipientPhone2;
			}
			set
			{
				if ((this._RecipientPhone2 != value))
				{
					this.OnRecipientPhone2Changing(value);
					this.SendPropertyChanging();
					this._RecipientPhone2 = value;
					this.SendPropertyChanged("RecipientPhone2");
					this.OnRecipientPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_City", DbType="Int NOT NULL")]
		public int ID_City
		{
			get
			{
				return this._ID_City;
			}
			set
			{
				if ((this._ID_City != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CityChanging(value);
					this.SendPropertyChanging();
					this._ID_City = value;
					this.SendPropertyChanged("ID_City");
					this.OnID_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagePrice", DbType="Real NOT NULL")]
		public float PackagePrice
		{
			get
			{
				return this._PackagePrice;
			}
			set
			{
				if ((this._PackagePrice != value))
				{
					this.OnPackagePriceChanging(value);
					this.SendPropertyChanging();
					this._PackagePrice = value;
					this.SendPropertyChanged("PackagePrice");
					this.OnPackagePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageNumber", DbType="Real NOT NULL")]
		public float PackageNumber
		{
			get
			{
				return this._PackageNumber;
			}
			set
			{
				if ((this._PackageNumber != value))
				{
					this.OnPackageNumberChanging(value);
					this.SendPropertyChanging();
					this._PackageNumber = value;
					this.SendPropertyChanged("PackageNumber");
					this.OnPackageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_CustomerOrder", Storage="_City", ThisKey="ID_City", OtherKey="ID_City", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.CustomerOrders.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.CustomerOrders.Add(this);
						this._ID_City = value.ID_City;
					}
					else
					{
						this._ID_City = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_City;
		
		private string _CityName;
		
		private decimal _PriceMen;
		
		private int _ID_Province;
		
		private string _Days;
		
		private bool _Exist;
		
		private string _Brunsh;
		
		private string _ProvinceName;
		
		private EntitySet<CustomerOrder> _CustomerOrders;
		
		private EntityRef<Province> _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CityChanging(int value);
    partial void OnID_CityChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnPriceMenChanging(decimal value);
    partial void OnPriceMenChanged();
    partial void OnID_ProvinceChanging(int value);
    partial void OnID_ProvinceChanged();
    partial void OnDaysChanging(string value);
    partial void OnDaysChanged();
    partial void OnExistChanging(bool value);
    partial void OnExistChanged();
    partial void OnBrunshChanging(string value);
    partial void OnBrunshChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    #endregion
		
		public City()
		{
			this._CustomerOrders = new EntitySet<CustomerOrder>(new Action<CustomerOrder>(this.attach_CustomerOrders), new Action<CustomerOrder>(this.detach_CustomerOrders));
			this._Province = default(EntityRef<Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_City", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_City
		{
			get
			{
				return this._ID_City;
			}
			set
			{
				if ((this._ID_City != value))
				{
					this.OnID_CityChanging(value);
					this.SendPropertyChanging();
					this._ID_City = value;
					this.SendPropertyChanged("ID_City");
					this.OnID_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceMen", DbType="Decimal(10,2) NOT NULL")]
		public decimal PriceMen
		{
			get
			{
				return this._PriceMen;
			}
			set
			{
				if ((this._PriceMen != value))
				{
					this.OnPriceMenChanging(value);
					this.SendPropertyChanging();
					this._PriceMen = value;
					this.SendPropertyChanged("PriceMen");
					this.OnPriceMenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Province", DbType="Int NOT NULL")]
		public int ID_Province
		{
			get
			{
				return this._ID_Province;
			}
			set
			{
				if ((this._ID_Province != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProvinceChanging(value);
					this.SendPropertyChanging();
					this._ID_Province = value;
					this.SendPropertyChanged("ID_Province");
					this.OnID_ProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit NOT NULL")]
		public bool Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brunsh", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Brunsh
		{
			get
			{
				return this._Brunsh;
			}
			set
			{
				if ((this._Brunsh != value))
				{
					this.OnBrunshChanging(value);
					this.SendPropertyChanging();
					this._Brunsh = value;
					this.SendPropertyChanged("Brunsh");
					this.OnBrunshChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(MAX)")]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._ProvinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_CustomerOrder", Storage="_CustomerOrders", ThisKey="ID_City", OtherKey="ID_City")]
		public EntitySet<CustomerOrder> CustomerOrders
		{
			get
			{
				return this._CustomerOrders;
			}
			set
			{
				this._CustomerOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Province", ThisKey="ID_Province", OtherKey="ID_Province", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._ID_Province = value.ID_Province;
					}
					else
					{
						this._ID_Province = default(int);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerOrders(CustomerOrder entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_CustomerOrders(CustomerOrder entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Order;
		
		private string _Barcode;
		
		private string _Customer;
		
		private string _CustomerPhone;
		
		private string _Recipient;
		
		private string _RecipientPhone1;
		
		private string _RecipientPhone2;
		
		private string _Address;
		
		private string _City;
		
		private decimal _PackagePrice;
		
		private int _PackageNumber;
		
		private decimal _DeliveryPrice;
		
		private decimal _TotalPrice;
		
		private string _Delegate;
		
		private string _State;
		
		private System.DateTime _Date;
		
		private string _User;
		
		private bool _Exist;
		
		private string _Note;
		
		private System.DateTime _DateState;
		
		private string _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OrderChanging(int value);
    partial void OnID_OrderChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnRecipientPhone1Changing(string value);
    partial void OnRecipientPhone1Changed();
    partial void OnRecipientPhone2Changing(string value);
    partial void OnRecipientPhone2Changed();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPackagePriceChanging(decimal value);
    partial void OnPackagePriceChanged();
    partial void OnPackageNumberChanging(int value);
    partial void OnPackageNumberChanged();
    partial void OnDeliveryPriceChanging(decimal value);
    partial void OnDeliveryPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnDelegateChanging(string value);
    partial void OnDelegateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnExistChanging(bool value);
    partial void OnExistChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnDateStateChanging(System.DateTime value);
    partial void OnDateStateChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Order", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Order
		{
			get
			{
				return this._ID_Order;
			}
			set
			{
				if ((this._ID_Order != value))
				{
					this.OnID_OrderChanging(value);
					this.SendPropertyChanging();
					this._ID_Order = value;
					this.SendPropertyChanged("ID_Order");
					this.OnID_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(MAX)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NVarChar(MAX)")]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(MAX)")]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientPhone1", DbType="NVarChar(MAX)")]
		public string RecipientPhone1
		{
			get
			{
				return this._RecipientPhone1;
			}
			set
			{
				if ((this._RecipientPhone1 != value))
				{
					this.OnRecipientPhone1Changing(value);
					this.SendPropertyChanging();
					this._RecipientPhone1 = value;
					this.SendPropertyChanged("RecipientPhone1");
					this.OnRecipientPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientPhone2", DbType="NVarChar(MAX)")]
		public string RecipientPhone2
		{
			get
			{
				return this._RecipientPhone2;
			}
			set
			{
				if ((this._RecipientPhone2 != value))
				{
					this.OnRecipientPhone2Changing(value);
					this.SendPropertyChanging();
					this._RecipientPhone2 = value;
					this.SendPropertyChanged("RecipientPhone2");
					this.OnRecipientPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackagePrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal PackagePrice
		{
			get
			{
				return this._PackagePrice;
			}
			set
			{
				if ((this._PackagePrice != value))
				{
					this.OnPackagePriceChanging(value);
					this.SendPropertyChanging();
					this._PackagePrice = value;
					this.SendPropertyChanged("PackagePrice");
					this.OnPackagePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageNumber", DbType="Int NOT NULL")]
		public int PackageNumber
		{
			get
			{
				return this._PackageNumber;
			}
			set
			{
				if ((this._PackageNumber != value))
				{
					this.OnPackageNumberChanging(value);
					this.SendPropertyChanging();
					this._PackageNumber = value;
					this.SendPropertyChanged("PackageNumber");
					this.OnPackageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal DeliveryPrice
		{
			get
			{
				return this._DeliveryPrice;
			}
			set
			{
				if ((this._DeliveryPrice != value))
				{
					this.OnDeliveryPriceChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPrice = value;
					this.SendPropertyChanged("DeliveryPrice");
					this.OnDeliveryPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delegate", DbType="NVarChar(MAX)")]
		public string Delegate
		{
			get
			{
				return this._Delegate;
			}
			set
			{
				if ((this._Delegate != value))
				{
					this.OnDelegateChanging(value);
					this.SendPropertyChanging();
					this._Delegate = value;
					this.SendPropertyChanged("Delegate");
					this.OnDelegateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="NVarChar(MAX)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exist", DbType="Bit NOT NULL")]
		public bool Exist
		{
			get
			{
				return this._Exist;
			}
			set
			{
				if ((this._Exist != value))
				{
					this.OnExistChanging(value);
					this.SendPropertyChanging();
					this._Exist = value;
					this.SendPropertyChanged("Exist");
					this.OnExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateState", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateState
		{
			get
			{
				return this._DateState;
			}
			set
			{
				if ((this._DateState != value))
				{
					this.OnDateStateChanging(value);
					this.SendPropertyChanging();
					this._DateState = value;
					this.SendPropertyChanged("DateState");
					this.OnDateStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(MAX)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
